import firebase from 'firebase'

let secrets = require("../../functions/.runtimeconfig.json");
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
    apiKey: secrets.mysecrets.apikey,
    authDomain: "outreach-dash.firebaseapp.com",
    projectId: "outreach-dash",
    storageBucket: "outreach-dash.appspot.com",
    messagingSenderId: "1060044447635",
    appId: "1:1060044447635:web:37e25768831d7533871266",
    measurementId: "G-6ETTDL48LL"
};

// init firebase
firebase.initializeApp(firebaseConfig)

const myProjectAuth = firebase.auth()
let user = myProjectAuth.onAuthStateChanged(() => {
    user = myProjectAuth.currentUser
})

let isAdmin

    myProjectAuth.onAuthStateChanged(user => {
        user.getIdTokenResult().then(result => {
            isAdmin = result.claims.admin
            console.log(user.displayName)
        })
    })

const dataBase = firebase.firestore()

function hasSameDoc(localCollection, incomingObject) {
    return !!localCollection.some(localDoc => localDoc.id === incomingObject.doc.id);
}

function getCollection(collection, targetArray) {
    dataBase.collection(collection).onSnapshot(res => {

        const changes = res.docChanges()
        changes.forEach(change => {

            if (change.type === 'added' && !hasSameDoc(targetArray, change)) {
                targetArray.push({
                    ...change.doc.data(),
                    id: change.doc.id, //custom id generated by firebase
                })

                console.log("Change in Data")
            }
        })
    })
}


export {myProjectAuth, user, isAdmin, dataBase, getCollection}